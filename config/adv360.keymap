/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt { flavor = "balanced"; };

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        symbols2_redundant1 {
            bindings = <&mo 4>;
            key-positions = <50>;
            layers = <2>;
        };

        symbols2 {
            bindings = <&mo 4>;
            key-positions = <49>;
            layers = <3>;
        };

        delete_word {
            bindings = <&kp RC(BACKSPACE)>;
            key-positions = <69 38>;
            layers = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Mac {
            bindings = <
&kp EQUAL  &kp N1        &kp N2      &kp N3     &kp N4         &kp N5  &mo 6                                                                                   &mo 6        &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp ESC    &kp Q         &kp W       &kp E      &kp R          &kp T   &kp PG_UP                                                                               &kp HOME     &kp Y   &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp TAB    &kp A         &kp S       &kp D      &lt 2 F        &kp G   &kp PG_DN    &mt LEFT_ALT ESCAPE    &kp DEL           &mo 2              &kp RSHIFT     &kp END      &kp H   &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z         &kp X       &lt 2 C    &lt 3 V        &kp B                                       &kp LCTRL         &kp RIGHT_CONTROL                              &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&kp LCTRL  &kp LEFT_ALT  &kp ESCAPE  &kp PG_UP  &kp PAGE_DOWN          &lt 7 ENTER  &mt LEFT_SHIFT ESCAPE  &kp LEFT_GUI      &kp LEFT_ALT       &kp BACKSPACE  &lt 7 SPACE          &kp HOME  &kp END    &kp LBKT  &kp RBKT  &tog 1
            >;
        };

        Windows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &kp LEFT_WIN          &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &mt LCTRL ESCAPE      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_Controller {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                &trans  &trans    &trans    &kp PAGE_UP    &kp C_PREV  &kp C_NEXT  &kp C_PLAY_PAUSE
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                &trans  &trans    &trans    &kp UP         &trans      &trans      &kp C_VOLUME_UP
&trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans     &trans      &trans  &trans  &trans  &kp HOME  &kp LEFT  &kp DOWN       &kp RIGHT   &kp END     &kp C_VOLUME_DOWN
&trans  &trans  &trans  &trans  &trans  &trans                            &trans      &trans                  &trans    &trans    &kp PAGE_DOWN  &trans      &trans      &kp C_MUTE
&trans  &trans  &trans  &trans  &trans          &kp BACKSPACE  &kp SPACE  &trans      &trans  &trans  &trans            &trans    &trans         &trans      &trans      &trans
            >;
        };

        first_symbols {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 0                                      &mo 3   &kp F7      &kp F8                &kp F9          &kp F10            &kp F11        &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans      &kp SINGLE_QUOTE      &kp GRAVE       &kp DOUBLE_QUOTES  &kp LS(GRAVE)  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp LEFT_BRACKET   &kp LESS_THAN  &kp DOUBLE_QUOTES
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &kp HASH    &kp EQUAL             &kp AMPS        &kp PIPE           &kp QUESTION   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans              &trans                &trans          &trans             &trans         &trans
            >;
        };

        Second_Symbols {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                          &trans     &trans                 &trans                 &trans           &trans             &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                          &trans     &trans                 &kp PLUS               &kp ASTERISK     &kp MINUS          &kp AT            &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans      &trans  &trans    &trans     &kp RIGHT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans      &trans                       &trans                 &kp EXCL               &kp PERCENT      &kp CARET          &kp BACKSLASH     &trans
&trans  &trans  &trans  &trans  &trans          &kp DEL  &kp RET  &trans      &trans  &kp BSPC  &kp SPACE                         &trans                 &trans           &trans             &trans            &trans
            >;
        };

        Lnav_keypad {
            bindings = <
&trans     &trans     &trans    &kp PG_UP      &trans     &trans   &trans                                      &trans           &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans     &trans     &trans    &kp UP         &trans     &trans   &none                                       &none            &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
&trans     &kp HOME   &kp LEFT  &kp DOWN       &kp RIGHT  &kp END  &none   &trans  &trans      &trans  &trans  &none            &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&kp LSHFT  &trans     &trans    &kp PAGE_DOWN  &trans     &trans                   &trans      &trans                           &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans     &kp GRAVE  &kp CAPS  &trans         &trans              &trans  &trans  &trans      &trans  &trans  &kp KP_NUMBER_0          &trans      &trans        &kp KP_DOT     &trans           &mo 6
            >;
        };

        firmware {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none                  &none            &none              &none      &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &kp PLUS               &kp KP_MULTIPLY  &kp MINUS          &none      &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GRAVE  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &kp GREATER_THAN       &kp PERCENT      &kp PIPE           &kp EXCL   &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC             &bl BL_DEC       &none              &none      &none
            >;
        };

        numpad_alt {
            bindings = <
&trans     &trans     &trans    &kp PG_UP      &trans     &trans   &trans                                      &trans  &trans  &kp KP_NUM       &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans     &trans     &trans    &kp UP         &trans     &trans   &none                                       &none   &trans  &kp KP_N7        &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
&trans     &kp HOME   &kp LEFT  &kp DOWN       &kp RIGHT  &kp END  &none   &trans  &trans      &trans  &trans  &none   &trans  &kp KP_N4        &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&kp LSHFT  &trans     &trans    &kp PAGE_DOWN  &trans     &trans                   &trans      &trans                  &trans  &kp KP_N1        &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans     &kp GRAVE  &kp CAPS  &trans         &trans              &trans  &trans  &trans      &trans  &trans  &trans          &kp KP_NUMBER_0  &trans        &kp KP_DOT     &trans           &mo 6
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
